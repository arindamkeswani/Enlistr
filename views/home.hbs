{{#if removedUser}}
<div class="alert alert-danger alert-dismissible fade show" role="alert">
    User removed successfully.
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
{{/if}}

<div class="row" style="margin-bottom: 2rem;">
    <div class="col-10">
        <h2>Candidates</h2>
    </div>
    <div class="col-1 d-flex justify-content-end">
        <a href="/" type='button' class="btn btn-light btn-outline-dark align-self-center bi bi-arrow-repeat"></a>
    </div>
    <div class="col-1 d-flex justify-content-end">
        <a href="/addUser" type='button' class="btn btn-light btn-outline-dark align-self-center bi bi-person-plus"></a>
    </div>

</div>

<table class="table table-light table-bordered table-striped table-hover text-center" id="myTable" style="font-size: 12px;">
    <thead class="thead-dark">
        <tr>
            <th scope="col">#</th>
            <th scope="col" onclick="sortTable(0)">First Name</th>
            <th scope="col" onclick="sortTable(1)">Last Name</th>
            <th scope="col" onclick="sortTable(2)">Latest Degree</th>
            <th scope="col" onclick="sortTable(3)">Major</th>
            <th scope="col" onclick="sortTableNum(4)">CGPA (/10)</button> </th>
            <th scope="col" onclick="sortTable(5)">Domain Skills</th>
            <th scope="col" onclick="sortTableNum(6)">Graduation year</th>
            <th scope="col" onclick="sortTable(7)">Achievements</th>
            <th scope="col" onclick="sortTable(8)">E-Mail ID</th>
            <th scope="col">Contact No.</th>
            <th class="text-end" style="width:1px; white-space:nowrap;">Action</th>
        </tr>
    </thead>
    <tbody>
        {{#each rows}}
        <tr>
            <th scope="row">{{this.id}}</th>
            <td>{{this.first_name}}</td>
            <td>{{this.last_name}}</td>
            <td>{{this.latest_degree}}</td>
            <td>{{this.major}}</td>
            <td>{{this.cgpa}}</td>
            <td>{{this.domain_skills}}</td>
            <td>{{this.graduation_year}}</td>
            <td>{{this.achievements}}</td>
            <td>{{this.email}}</td>
            <td>{{this.contact}}</td>
            <td class="text-end" style="width:1px; white-space:nowrap;">
                <a href="/viewuser/{{this.id}}" type="button" class="btn btn-secondary btn-small"> <i
                        class="bi bi-eye"></i></a>
                <a href="/edituser/{{this.id}}" type="button" class="btn btn-dark btn-small"> <i
                        class="bi bi-pencil"></i></a>
                <a href="/{{this.id}}" type="button" class="btn btn-danger btn-small"> <i class="bi bi-trash"></i></a>
            </td>
        </tr>
        {{/each}}
    </tbody>
</table>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("td")[n];
                y = rows[i + 1].getElementsByTagName("td")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }


    function sortTableNum(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("td")[n];
                y = rows[i + 1].getElementsByTagName("td")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {
                        //console.log(parseFloat(x.innerHTML), parseFloat(y.innerHTML));
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) {
                        //if so, mark as a switch and break the loop:
                        
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>